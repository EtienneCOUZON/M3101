{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1","program":"C:\\Users\\Etienne Couzon\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","hashbrown","C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"raw\"","-C","metadata=7ddc070cc3ba830d","-C","extra-filename=-7ddc070cc3ba830d","--out-dir","d:\\Downloads\\M3101-master-1c4b0711a9ab5d2b7280ad276ad84952a5f4894a\\structures\\target\\rls\\debug\\deps","-L","dependency=d:\\Downloads\\M3101-master-1c4b0711a9ab5d2b7280ad276ad84952a5f4894a\\structures\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Etienne Couzon\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Downloads\\M3101-master-1c4b0711a9ab5d2b7280ad276ad84952a5f4894a\\structures\\target\\rls\\debug\\deps\\libhashbrown-7ddc070cc3ba830d.rmeta"},"prelude":{"crate_id":{"name":"hashbrown","disambiguator":[14359098017894557054,3809274086615435601]},"crate_root":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src","external_crates":[{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}}],"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":0,"byte_end":3193,"line_start":1,"line_end":112,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":1401,"byte_end":1402,"line_start":48,"line_end":48,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"RawDrain, RawIter, RawIntoIter, RawTable, Bucket","parent":{"krate":0,"index":8}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":1401,"byte_end":1402,"line_start":48,"line_end":48,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1381}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":1401,"byte_end":1402,"line_start":48,"line_end":48,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1383}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":2731,"byte_end":2738,"line_start":97,"line_end":97,"column_start":21,"column_end":28},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":2760,"byte_end":2767,"line_start":98,"line_end":98,"column_start":21,"column_end":28},"alias_span":null,"name":"HashSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":0,"byte_end":3193,"line_start":1,"line_end":112,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":1007},{"krate":0,"index":1032},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1437},{"krate":0,"index":1451},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1442}],"decl_id":null,"docs":" This crate is a Rust port of Google's high-performance [SwissTable] hash\n map, adapted to make it a drop-in replacement for Rust's standard `HashMap`\n and `HashSet` types.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":555,"byte_end":565,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"allow(clippy :: doc_markdown, clippy :: module_name_repetitions, clippy ::\n        must_use_candidate, clippy :: option_if_let_else)","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":691,"byte_end":829,"line_start":17,"line_end":22,"column_start":1,"column_end":3}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":830,"byte_end":852,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":853,"byte_end":879,"line_start":24,"line_end":24,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":1229,"byte_end":1232,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"name":"raw","qualname":"::raw","value":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":312}],"decl_id":null,"docs":" Experimental and unsafe `RawTable` API. This module is only available if the\n `raw` feature is enabled.\n","sig":null,"attributes":[{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":1086,"byte_end":1109,"line_start":40,"line_end":40,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":14673,"byte_end":14679,"line_start":272,"line_end":272,"column_start":12,"column_end":18},"name":"Bucket","qualname":"::raw::inner::Bucket","value":"Bucket {  }","parent":null,"children":[{"krate":0,"index":78}],"decl_id":null,"docs":" A reference to a hash table bucket containing a `T`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":16039,"byte_end":16045,"line_start":313,"line_end":313,"column_start":19,"column_end":25},"name":"as_ptr","qualname":"<Bucket<T>>::as_ptr","value":"fn (&self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":16718,"byte_end":16722,"line_start":333,"line_end":333,"column_start":19,"column_end":23},"name":"drop","qualname":"<Bucket<T>>::drop","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":16844,"byte_end":16848,"line_start":337,"line_end":337,"column_start":19,"column_end":23},"name":"read","qualname":"<Bucket<T>>::read","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":16965,"byte_end":16970,"line_start":341,"line_end":341,"column_start":19,"column_end":24},"name":"write","qualname":"<Bucket<T>>::write","value":"fn (&self, val: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":17095,"byte_end":17101,"line_start":345,"line_end":345,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Bucket<T>>::as_ref","value":"fn <'a> (&self) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":17221,"byte_end":17227,"line_start":349,"line_end":349,"column_start":19,"column_end":25},"name":"as_mut","qualname":"<Bucket<T>>::as_mut","value":"fn <'a> (&self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":17355,"byte_end":17379,"line_start":353,"line_end":353,"column_start":19,"column_end":43},"name":"copy_from_nonoverlapping","qualname":"<Bucket<T>>::copy_from_nonoverlapping","value":"fn (&self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":17531,"byte_end":17539,"line_start":359,"line_end":359,"column_start":12,"column_end":20},"name":"RawTable","qualname":"::raw::inner::RawTable","value":"RawTable {  }","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"decl_id":null,"docs":" A raw hash table with an unsafe API.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":18483,"byte_end":18486,"line_start":385,"line_end":385,"column_start":18,"column_end":21},"name":"new","qualname":"<RawTable<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash table without allocating any memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":20909,"byte_end":20926,"line_start":451,"line_end":451,"column_start":12,"column_end":29},"name":"try_with_capacity","qualname":"<RawTable<T>>::try_with_capacity","value":"fn (capacity: usize) -> Result<Self, TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to allocate a new hash table with at least enough capacity\n for inserting the given number of elements without reallocating.\n","sig":null,"attributes":[{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":20874,"byte_end":20897,"line_start":450,"line_end":450,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":21205,"byte_end":21218,"line_start":457,"line_end":457,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<RawTable<T>>::with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new hash table with at least enough capacity for inserting\n the given number of elements without reallocating.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":22106,"byte_end":22114,"line_start":478,"line_end":478,"column_start":19,"column_end":27},"name":"data_end","qualname":"<RawTable<T>>::data_end","value":"fn (&self) -> NonNull<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns pointer to one past last element of data table.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":22574,"byte_end":22586,"line_start":491,"line_end":491,"column_start":19,"column_end":31},"name":"bucket_index","qualname":"<RawTable<T>>::bucket_index","value":"fn (&self, bucket: &Bucket<T>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of a bucket from a `Bucket`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":23045,"byte_end":23051,"line_start":504,"line_end":504,"column_start":19,"column_end":25},"name":"bucket","qualname":"<RawTable<T>>::bucket","value":"fn (&self, index: usize) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to an element in the table.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":23447,"byte_end":23460,"line_start":513,"line_end":513,"column_start":19,"column_end":32},"name":"erase_no_drop","qualname":"<RawTable<T>>::erase_no_drop","value":"fn (&mut self, item: &Bucket<T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Erases an element from the table without dropping it.\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.1\", note = \"use erase or remove instead\")","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":23360,"byte_end":23428,"line_start":512,"line_end":512,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":24790,"byte_end":24795,"line_start":542,"line_end":542,"column_start":19,"column_end":24},"name":"erase","qualname":"<RawTable<T>>::erase","value":"fn (&mut self, item: Bucket<T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Erases an element from the table, dropping it in place.\n","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":24706,"byte_end":24746,"line_start":540,"line_end":540,"column_start":5,"column_end":45}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":24751,"byte_end":24771,"line_start":541,"line_end":541,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":25171,"byte_end":25182,"line_start":552,"line_end":552,"column_start":12,"column_end":23},"name":"erase_entry","qualname":"<RawTable<T>>::erase_entry","value":"fn (&mut self, hash: u64, eq: impl FnMut(&T) -> bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Finds and erases an element from the table, dropping it in place.\n Returns true if an element was found.\n","sig":null,"attributes":[{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":25087,"byte_end":25110,"line_start":550,"line_end":550,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":25659,"byte_end":25665,"line_start":566,"line_end":566,"column_start":19,"column_end":25},"name":"remove","qualname":"<RawTable<T>>::remove","value":"fn (&mut self, item: Bucket<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes an element from the table, returning it.\n","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":25575,"byte_end":25615,"line_start":564,"line_end":564,"column_start":5,"column_end":45}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":25620,"byte_end":25640,"line_start":565,"line_end":565,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":25890,"byte_end":25902,"line_start":573,"line_end":573,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawTable<T>>::remove_entry","value":"fn (&mut self, hash: u64, eq: impl FnMut(&T) -> bool) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Finds and removes an element from the table, returning it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":29966,"byte_end":29979,"line_start":663,"line_end":663,"column_start":12,"column_end":25},"name":"clear_no_drop","qualname":"<RawTable<T>>::clear_no_drop","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Marks all table buckets as empty without dropping their contents.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":30391,"byte_end":30396,"line_start":675,"line_end":675,"column_start":12,"column_end":17},"name":"clear","qualname":"<RawTable<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from the table without freeing the backing memory.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":30881,"byte_end":30890,"line_start":690,"line_end":690,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<RawTable<T>>::shrink_to","value":"fn (&mut self, min_size: usize, hasher: impl Fn(&T) -> u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the table to fit `max(self.len(), min_size)` elements.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":32349,"byte_end":32356,"line_start":728,"line_end":728,"column_start":12,"column_end":19},"name":"reserve","qualname":"<RawTable<T>>::reserve","value":"fn (&mut self, additional: usize, hasher: impl Fn(&T) -> u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Ensures that at least `additional` items can be inserted into the table\n without reallocation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":32936,"byte_end":32947,"line_start":743,"line_end":743,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<RawTable<T>>::try_reserve","value":"fn (&mut self, additional: usize, hasher: impl Fn(&T) -> u64) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to ensure that at least `additional` items can be inserted into\n the table without reallocation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":41401,"byte_end":41407,"line_start":941,"line_end":941,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawTable<T>>::insert","value":"fn (&mut self, hash: u64, value: T, hasher: impl Fn(&T) -> u64) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the table, and returns its raw bucket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":42498,"byte_end":42510,"line_start":967,"line_end":967,"column_start":12,"column_end":24},"name":"insert_entry","qualname":"<RawTable<T>>::insert_entry","value":"fn (&mut self, hash: u64, value: T, hasher: impl Fn(&T) -> u64) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the table, and returns a mutable reference to it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":43018,"byte_end":43032,"line_start":978,"line_end":978,"column_start":12,"column_end":26},"name":"insert_no_grow","qualname":"<RawTable<T>>::insert_no_grow","value":"fn (&mut self, hash: u64, value: T) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the table, without growing the table.","sig":null,"attributes":[{"value":"cfg(any (feature = \"raw\", feature = \"rustc-internal-api\"))","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":42946,"byte_end":43006,"line_start":977,"line_end":977,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":43941,"byte_end":43960,"line_start":1002,"line_end":1002,"column_start":19,"column_end":38},"name":"replace_bucket_with","qualname":"<RawTable<T>>::replace_bucket_with","value":"fn <F> (&mut self, bucket: Bucket<T>, f: F) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Temporary removes a bucket, applying the given function to the removed\n element and optionally put back the returned value in the same bucket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":44630,"byte_end":44634,"line_start":1024,"line_end":1024,"column_start":12,"column_end":16},"name":"find","qualname":"<RawTable<T>>::find","value":"fn (&self, hash: u64, mut eq: impl FnMut(&T) -> bool) -> Option<Bucket<T>>","parent":null,"children":[],"decl_id":null,"docs":" Searches for an element in the table.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":44609,"byte_end":44618,"line_start":1023,"line_end":1023,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":45039,"byte_end":45042,"line_start":1038,"line_end":1038,"column_start":12,"column_end":15},"name":"get","qualname":"<RawTable<T>>::get","value":"fn (&self, hash: u64, eq: impl FnMut(&T) -> bool) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to an element in the table.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":45018,"byte_end":45027,"line_start":1037,"line_end":1037,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":45390,"byte_end":45397,"line_start":1048,"line_end":1048,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawTable<T>>::get_mut","value":"fn (&mut self, hash: u64, eq: impl FnMut(&T) -> bool) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to an element in the table.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":45369,"byte_end":45378,"line_start":1047,"line_end":1047,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":45954,"byte_end":45962,"line_start":1061,"line_end":1061,"column_start":12,"column_end":20},"name":"capacity","qualname":"<RawTable<T>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":46139,"byte_end":46142,"line_start":1067,"line_end":1067,"column_start":12,"column_end":15},"name":"len","qualname":"<RawTable<T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the table.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":46299,"byte_end":46306,"line_start":1073,"line_end":1073,"column_start":12,"column_end":19},"name":"buckets","qualname":"<RawTable<T>>::buckets","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of buckets in the table.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":47127,"byte_end":47131,"line_start":1095,"line_end":1095,"column_start":19,"column_end":23},"name":"iter","qualname":"<RawTable<T>>::iter","value":"fn (&self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over every element in the table. It is up to\n the caller to ensure that the `RawTable` outlives the `RawIter`.\n Because we cannot make the `next` method unsafe on the `RawIter`\n struct, we have to make the `iter` method unsafe.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":47836,"byte_end":47845,"line_start":1111,"line_end":1111,"column_start":19,"column_end":28},"name":"iter_hash","qualname":"<RawTable<T>>::iter_hash","value":"fn (&self, hash: u64) -> RawIterHash<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over occupied buckets that could match a given hash.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":48098,"byte_end":48103,"line_start":1118,"line_end":1118,"column_start":12,"column_end":17},"name":"drain","qualname":"<RawTable<T>>::drain","value":"fn (&mut self) -> RawDrain<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which removes all elements from the table without\n freeing the memory.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":48647,"byte_end":48662,"line_start":1133,"line_end":1133,"column_start":19,"column_end":34},"name":"drain_iter_from","qualname":"<RawTable<T>>::drain_iter_from","value":"fn (&mut self, iter: RawIter<T>) -> RawDrain<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which removes all elements from the table without\n freeing the memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":49285,"byte_end":49299,"line_start":1149,"line_end":1149,"column_start":19,"column_end":33},"name":"into_iter_from","qualname":"<RawTable<T>>::into_iter_from","value":"fn (self, iter: RawIter<T>) -> RawIntoIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which consumes all elements from the table.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":55449,"byte_end":55471,"line_start":1319,"line_end":1319,"column_start":12,"column_end":34},"name":"clone_from_with_hasher","qualname":"<RawTable<T>>::clone_from_with_hasher","value":"fn (&mut self, source: &Self, hasher: impl Fn(&T) -> u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Variant of `clone_from` to use when a hasher is available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":55414,"byte_end":55437,"line_start":1318,"line_end":1318,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":64499,"byte_end":64506,"line_start":1563,"line_end":1563,"column_start":12,"column_end":19},"name":"RawIter","qualname":"::raw::inner::RawIter","value":"RawIter {  }","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226}],"decl_id":null,"docs":" Iterator which returns a raw pointer to every full bucket in the table.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":65049,"byte_end":65063,"line_start":1577,"line_end":1577,"column_start":12,"column_end":26},"name":"reflect_remove","qualname":"<RawIter<T>>::reflect_remove","value":"fn (&mut self, b: &Bucket<T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Refresh the iterator so that it reflects a removal from the given bucket.","sig":null,"attributes":[{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":65014,"byte_end":65037,"line_start":1576,"line_end":1576,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":65649,"byte_end":65663,"line_start":1591,"line_end":1591,"column_start":12,"column_end":26},"name":"reflect_insert","qualname":"<RawIter<T>>::reflect_insert","value":"fn (&mut self, b: &Bucket<T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Refresh the iterator so that it reflects an insertion into the given bucket.","sig":null,"attributes":[{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":65614,"byte_end":65637,"line_start":1590,"line_end":1590,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":71556,"byte_end":71567,"line_start":1723,"line_end":1723,"column_start":12,"column_end":23},"name":"RawIntoIter","qualname":"::raw::inner::RawIntoIter","value":"RawIntoIter {  }","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" Iterator which consumes a table and returns elements.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":71753,"byte_end":71757,"line_start":1731,"line_end":1731,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawIntoIter<T>>::iter","value":"fn (&self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":73568,"byte_end":73576,"line_start":1796,"line_end":1796,"column_start":12,"column_end":20},"name":"RawDrain","qualname":"::raw::inner::RawDrain","value":"RawDrain {  }","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"decl_id":null,"docs":" Iterator which consumes elements without freeing the table storage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":74095,"byte_end":74099,"line_start":1812,"line_end":1812,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawDrain>::iter","value":"fn (&self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":75648,"byte_end":75659,"line_start":1866,"line_end":1866,"column_start":12,"column_end":23},"name":"RawIterHash","qualname":"::raw::inner::RawIterHash","value":"RawIterHash {  }","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"decl_id":null,"docs":" Iterator over occupied buckets that could match a given hash.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":81857,"byte_end":81875,"line_start":17,"line_end":17,"column_start":10,"column_end":28},"name":"DefaultHashBuilder","qualname":"::map::DefaultHashBuilder","value":"DefaultHashBuilder::{}","parent":null,"children":[],"decl_id":null,"docs":" Dummy default hasher for `HashMap`.\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"ahash\"))","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":81817,"byte_end":81847,"line_start":16,"line_end":16,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":88146,"byte_end":88153,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::map::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":91077,"byte_end":91088,"line_start":278,"line_end":278,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<HashMap<K, V, S>>::with_hasher","value":"fn (hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` which will use the given hash builder to hash\n keys.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":92343,"byte_end":92367,"line_start":312,"line_end":312,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashMap<K, V, S>>::with_capacity_and_hasher","value":"fn (capacity: usize, hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity, using `hash_builder`\n to hash the keys.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":93060,"byte_end":93066,"line_start":334,"line_end":334,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashMap<K, V, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's [`BuildHasher`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":93610,"byte_end":93618,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashMap<K, V, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":94142,"byte_end":94146,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, S>>::keys","value":"fn (&self) -> Keys<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order.\n The iterator element type is `&'a K`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":94689,"byte_end":94695,"line_start":395,"line_end":395,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, S>>::values","value":"fn (&self) -> Values<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.\n The iterator element type is `&'a V`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":95348,"byte_end":95358,"line_start":422,"line_end":422,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<HashMap<K, V, S>>::values_mut","value":"fn (&mut self) -> ValuesMut<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.\n The iterator element type is `&'a mut V`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":95981,"byte_end":95985,"line_start":446,"line_end":446,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, S>>::iter","value":"fn (&self) -> Iter<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order.\n The iterator element type is `(&'a K, &'a V)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":96885,"byte_end":96893,"line_start":480,"line_end":480,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, S>>::iter_mut","value":"fn (&mut self) -> IterMut<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order,\n with mutable references to the values.\n The iterator element type is `(&'a K, &'a mut V)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":97610,"byte_end":97613,"line_start":509,"line_end":509,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":98004,"byte_end":98012,"line_start":526,"line_end":526,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":98605,"byte_end":98610,"line_start":550,"line_end":550,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashMap<K, V, S>>::drain","value":"fn (&mut self) -> Drain<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, returning all key-value pairs as an iterator. Keeps the\n allocated memory for reuse.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":99138,"byte_end":99144,"line_start":569,"line_end":569,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashMap<K, V, S>>::retain","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":100560,"byte_end":100572,"line_start":610,"line_end":610,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashMap<K, V, S>>::drain_filter","value":"fn <F> (&mut self, f: F) -> DrainFilter<'_, K, V, F>","parent":null,"children":[],"decl_id":null,"docs":" Drains elements which are true under the given predicate,\n and returns an iterator over the removed items.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":101245,"byte_end":101250,"line_start":637,"line_end":637,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashMap<K, V, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":101972,"byte_end":101979,"line_start":665,"line_end":665,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashMap<K, V, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashMap`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":102792,"byte_end":102803,"line_start":688,"line_end":688,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashMap<K, V, S>>::try_reserve","value":"fn (&mut self, additional: usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashMap<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":103622,"byte_end":103635,"line_start":711,"line_end":711,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashMap<K, V, S>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":104643,"byte_end":104652,"line_start":740,"line_end":740,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashMap<K, V, S>>::shrink_to","value":"fn (&mut self, min_capacity: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":105447,"byte_end":105452,"line_start":766,"line_end":766,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, S>>::entry","value":"fn (&mut self, key: K) -> Entry<'_, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":106599,"byte_end":106602,"line_start":804,"line_end":804,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, S>>::get","value":"fn <Q> (&self, k: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":106578,"byte_end":106587,"line_start":803,"line_end":803,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":107569,"byte_end":107582,"line_start":836,"line_end":836,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<HashMap<K, V, S>>::get_key_value","value":"fn <Q> (&self, k: &Q) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":107548,"byte_end":107557,"line_start":835,"line_end":835,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":109006,"byte_end":109023,"line_start":882,"line_end":882,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<HashMap<K, V, S>>::get_key_value_mut","value":"fn <Q> (&mut self, k: &Q) -> Option<(&K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":108985,"byte_end":108994,"line_start":881,"line_end":881,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":110054,"byte_end":110066,"line_start":914,"line_end":914,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, S>>::contains_key","value":"fn <Q> (&self, k: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a value for the specified key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":110923,"byte_end":110930,"line_start":944,"line_end":944,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, S>>::get_mut","value":"fn <Q> (&mut self, k: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":112470,"byte_end":112476,"line_start":992,"line_end":992,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, S>>::insert","value":"fn (&mut self, k: K, v: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":113622,"byte_end":113628,"line_start":1025,"line_end":1025,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashMap<K, V, S>>::remove","value":"fn <Q> (&mut self, k: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":114659,"byte_end":114671,"line_start":1058,"line_end":1058,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<HashMap<K, V, S>>::remove_entry","value":"fn <Q> (&mut self, k: &Q) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stored key and value if the\n key was previously in the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":116881,"byte_end":116894,"line_start":1101,"line_end":1101,"column_start":12,"column_end":25},"name":"raw_entry_mut","qualname":"<HashMap<K, V, S>>::raw_entry_mut","value":"fn (&mut self) -> RawEntryBuilderMut<'_, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw entry builder for the HashMap.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":117732,"byte_end":117741,"line_start":1121,"line_end":1121,"column_start":12,"column_end":21},"name":"raw_entry","qualname":"<HashMap<K, V, S>>::raw_entry","value":"fn (&self) -> RawEntryBuilder<'_, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw immutable entry builder for the HashMap.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":119475,"byte_end":119479,"line_start":1197,"line_end":1197,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"decl_id":null,"docs":" An iterator over the entries of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":120299,"byte_end":120306,"line_start":1226,"line_end":1226,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464}],"decl_id":null,"docs":" A mutable iterator over the entries of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":121305,"byte_end":121313,"line_start":1255,"line_end":1255,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":475}],"decl_id":null,"docs":" An owning iterator over the entries of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":121908,"byte_end":121912,"line_start":1277,"line_end":1277,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":484}],"decl_id":null,"docs":" An iterator over the keys of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":122636,"byte_end":122642,"line_start":1304,"line_end":1304,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":497}],"decl_id":null,"docs":" An iterator over the values of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":123378,"byte_end":123383,"line_start":1331,"line_end":1331,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":510}],"decl_id":null,"docs":" A draining iterator over the entries of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":124053,"byte_end":124064,"line_start":1353,"line_end":1353,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::map::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"decl_id":null,"docs":" A draining iterator over entries of a `HashMap` which don't satisfy the predicate `f`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":126182,"byte_end":126191,"line_start":1434,"line_end":1434,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":562}],"decl_id":null,"docs":" A mutable iterator over the values of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":126478,"byte_end":126496,"line_start":1443,"line_end":1443,"column_start":12,"column_end":30},"name":"RawEntryBuilderMut","qualname":"::map::RawEntryBuilderMut","value":"RawEntryBuilderMut {  }","parent":null,"children":[{"krate":0,"index":568}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":127101,"byte_end":127109,"line_start":1460,"line_end":1460,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::RawEntryMut::Occupied","value":"RawEntryMut::Occupied(RawOccupiedEntryMut<'a, K, V, S>)","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":127173,"byte_end":127179,"line_start":1462,"line_end":1462,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::RawEntryMut::Vacant","value":"RawEntryMut::Vacant(RawVacantEntryMut<'a, K, V, S>)","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":127043,"byte_end":127054,"line_start":1458,"line_end":1458,"column_start":10,"column_end":21},"name":"RawEntryMut","qualname":"::map::RawEntryMut","value":"RawEntryMut::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":577}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":127368,"byte_end":127387,"line_start":1469,"line_end":1469,"column_start":12,"column_end":31},"name":"RawOccupiedEntryMut","qualname":"::map::RawOccupiedEntryMut","value":"RawOccupiedEntryMut {  }","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":127868,"byte_end":127885,"line_start":1494,"line_end":1494,"column_start":12,"column_end":29},"name":"RawVacantEntryMut","qualname":"::map::RawVacantEntryMut","value":"RawVacantEntryMut {  }","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":128195,"byte_end":128210,"line_start":1504,"line_end":1504,"column_start":12,"column_end":27},"name":"RawEntryBuilder","qualname":"::map::RawEntryBuilder","value":"RawEntryBuilder {  }","parent":null,"children":[{"krate":0,"index":608}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":128468,"byte_end":128476,"line_start":1512,"line_end":1512,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilderMut>::from_key","value":"fn <Q> (self, k: &Q) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":128417,"byte_end":128456,"line_start":1511,"line_end":1511,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":128903,"byte_end":128926,"line_start":1526,"line_end":1526,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilderMut>::from_key_hashed_nocheck","value":"fn <Q> (self, hash: u64, k: &Q) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key and its hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":128838,"byte_end":128847,"line_start":1524,"line_end":1524,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":128852,"byte_end":128891,"line_start":1525,"line_end":1525,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":129312,"byte_end":129321,"line_start":1539,"line_end":1539,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilderMut>::from_hash","value":"fn <F> (self, hash: u64, is_match: F) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":129261,"byte_end":129300,"line_start":1538,"line_end":1538,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":130316,"byte_end":130324,"line_start":1569,"line_end":1569,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilder>::from_key","value":"fn <Q> (self, k: &Q) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by key.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":130265,"byte_end":130304,"line_start":1568,"line_end":1568,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":130766,"byte_end":130789,"line_start":1583,"line_end":1583,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilder>::from_key_hashed_nocheck","value":"fn <Q> (self, hash: u64, k: &Q) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by a key and its hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":130715,"byte_end":130754,"line_start":1582,"line_end":1582,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":131440,"byte_end":131449,"line_start":1605,"line_end":1605,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilder>::from_hash","value":"fn <F> (self, hash: u64, is_match: F) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":131389,"byte_end":131428,"line_start":1604,"line_end":1604,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":132093,"byte_end":132099,"line_start":1627,"line_end":1627,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawEntryMut>::insert","value":"fn (self, key: K, value: V) -> RawOccupiedEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns a RawOccupiedEntryMut.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":133079,"byte_end":133088,"line_start":1658,"line_end":1658,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<RawEntryMut>::or_insert","value":"fn (self, default_key: K, default_val: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n mutable references to the key and value in the entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":133992,"byte_end":134006,"line_start":1686,"line_end":1686,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<RawEntryMut>::or_insert_with","value":"fn <F> (self, default: F) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":135102,"byte_end":135112,"line_start":1724,"line_end":1724,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<RawEntryMut>::and_modify","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":137198,"byte_end":137220,"line_start":1796,"line_end":1796,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<RawEntryMut>::and_replace_entry_with","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":137619,"byte_end":137622,"line_start":1810,"line_end":1810,"column_start":12,"column_end":15},"name":"key","qualname":"<RawOccupiedEntryMut>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":137804,"byte_end":137811,"line_start":1816,"line_end":1816,"column_start":12,"column_end":19},"name":"key_mut","qualname":"<RawOccupiedEntryMut>::key_mut","value":"fn (&mut self) -> &mut K","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":138072,"byte_end":138080,"line_start":1823,"line_end":1823,"column_start":12,"column_end":20},"name":"into_key","qualname":"<RawOccupiedEntryMut>::into_key","value":"fn (self) -> &'a mut K","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to the key in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":138266,"byte_end":138269,"line_start":1829,"line_end":1829,"column_start":12,"column_end":15},"name":"get","qualname":"<RawOccupiedEntryMut>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":138528,"byte_end":138536,"line_start":1836,"line_end":1836,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<RawOccupiedEntryMut>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":138730,"byte_end":138737,"line_start":1842,"line_end":1842,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawOccupiedEntryMut>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":138933,"byte_end":138946,"line_start":1848,"line_end":1848,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<RawOccupiedEntryMut>::get_key_value","value":"fn (&mut self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key and value in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":139219,"byte_end":139236,"line_start":1857,"line_end":1857,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<RawOccupiedEntryMut>::get_key_value_mut","value":"fn (&mut self) -> (&mut K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key and value in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":139604,"byte_end":139618,"line_start":1867,"line_end":1867,"column_start":12,"column_end":26},"name":"into_key_value","qualname":"<RawOccupiedEntryMut>::into_key_value","value":"fn (self) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the key and value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":139916,"byte_end":139922,"line_start":1876,"line_end":1876,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawOccupiedEntryMut>::insert","value":"fn (&mut self, value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":140134,"byte_end":140144,"line_start":1882,"line_end":1882,"column_start":12,"column_end":22},"name":"insert_key","qualname":"<RawOccupiedEntryMut>::insert_key","value":"fn (&mut self, key: K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":140338,"byte_end":140344,"line_start":1888,"line_end":1888,"column_start":12,"column_end":18},"name":"remove","qualname":"<RawOccupiedEntryMut>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":140517,"byte_end":140529,"line_start":1894,"line_end":1894,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawOccupiedEntryMut>::remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":140842,"byte_end":140860,"line_start":1902,"line_end":1902,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<RawOccupiedEntryMut>::replace_entry_with","value":"fn <F> (self, f: F) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":141719,"byte_end":141725,"line_start":1929,"line_end":1929,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawVacantEntryMut>::insert","value":"fn (self, key: K, value: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":142204,"byte_end":142225,"line_start":1943,"line_end":1943,"column_start":12,"column_end":33},"name":"insert_hashed_nocheck","qualname":"<RawVacantEntryMut>::insert_hashed_nocheck","value":"fn (self, hash: u64, key: K, value: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"allow(clippy :: shadow_unrelated)","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":142158,"byte_end":142192,"line_start":1942,"line_end":1942,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":142604,"byte_end":142622,"line_start":1954,"line_end":1954,"column_start":12,"column_end":30},"name":"insert_with_hasher","qualname":"<RawVacantEntryMut>::insert_with_hasher","value":"fn <H> (self, hash: u64, key: K, value: V, hasher: H) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Set the value of an entry with a custom hasher function.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":145019,"byte_end":145027,"line_start":2035,"line_end":2035,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry<'a, K, V, S>)","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":145086,"byte_end":145092,"line_start":2038,"line_end":2038,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry<'a, K, V, S>)","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":144967,"byte_end":144972,"line_start":2033,"line_end":2033,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"Entry::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":727}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":145578,"byte_end":145591,"line_start":2054,"line_end":2054,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":146331,"byte_end":146342,"line_start":2089,"line_end":2089,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":153924,"byte_end":153930,"line_start":2367,"line_end":2367,"column_start":12,"column_end":18},"name":"insert","qualname":"<Entry>::insert","value":"fn (self, value: V) -> OccupiedEntry<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":154806,"byte_end":154815,"line_start":2398,"line_end":2398,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, default: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":155605,"byte_end":155619,"line_start":2425,"line_end":2425,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, default: F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":156447,"byte_end":156465,"line_start":2452,"line_end":2452,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"fn <F> (self, default: F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default function,\n which takes the key as its argument, and returns a mutable reference to the value in the\n entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":157136,"byte_end":157139,"line_start":2477,"line_end":2477,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":157928,"byte_end":157938,"line_start":2505,"line_end":2505,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":159858,"byte_end":159880,"line_start":2573,"line_end":2573,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<Entry>::and_replace_entry_with","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":160622,"byte_end":160632,"line_start":2599,"line_end":2599,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":161299,"byte_end":161302,"line_start":2624,"line_end":2624,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":161955,"byte_end":161967,"line_start":2647,"line_end":2647,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":162519,"byte_end":162522,"line_start":2667,"line_end":2667,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":163482,"byte_end":163489,"line_start":2699,"line_end":2699,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":164341,"byte_end":164349,"line_start":2727,"line_end":2727,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":164973,"byte_end":164979,"line_start":2749,"line_end":2749,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn (&mut self, mut value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":165661,"byte_end":165667,"line_start":2773,"line_end":2773,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":166487,"byte_end":166500,"line_start":2798,"line_end":2798,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntry>::replace_entry","value":"fn (self, value: V) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old key and value. The new key in the hash map will be\n the key used to create this entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":167661,"byte_end":167672,"line_start":2832,"line_end":2832,"column_start":12,"column_end":23},"name":"replace_key","qualname":"<OccupiedEntry>::replace_key","value":"fn (self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Replaces the key in the hash map with the key used to create this entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":169316,"byte_end":169334,"line_start":2886,"line_end":2886,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<OccupiedEntry>::replace_entry_with","value":"fn <F> (self, f: F) -> Entry<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":170597,"byte_end":170600,"line_start":2930,"line_end":2930,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the `VacantEntry`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":171036,"byte_end":171044,"line_start":2949,"line_end":2949,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"fn (self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":171595,"byte_end":171601,"line_start":2970,"line_end":2970,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, value: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":220316,"byte_end":220323,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"HashSet","qualname":"::set::HashSet","value":"HashSet {  }","parent":null,"children":[{"krate":0,"index":1060}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":222813,"byte_end":222824,"line_start":198,"line_end":198,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<HashSet<T, S>>::with_hasher","value":"fn (hasher: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash set which will use the given hasher to hash\n keys.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":224045,"byte_end":224069,"line_start":231,"line_end":231,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashSet<T, S>>::with_capacity_and_hasher","value":"fn (capacity: usize, hasher: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity, using\n `hasher` to hash the keys.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":224540,"byte_end":224548,"line_start":247,"line_end":247,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashSet<T, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the set can hold without reallocating.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":225073,"byte_end":225077,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashSet<T, S>>::iter","value":"fn (&self) -> Iter<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all elements in arbitrary order.\n The iterator element type is `&'a T`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":225500,"byte_end":225503,"line_start":287,"line_end":287,"column_start":12,"column_end":15},"name":"len","qualname":"<HashSet<T, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":225887,"byte_end":225895,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashSet<T, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":226443,"byte_end":226448,"line_start":326,"line_end":326,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashSet<T, S>>::drain","value":"fn (&mut self) -> Drain<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, returning all elements in an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":226979,"byte_end":226985,"line_start":346,"line_end":346,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashSet<T, S>>::retain","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":228055,"byte_end":228067,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashSet<T, S>>::drain_filter","value":"fn <F> (&mut self, f: F) -> DrainFilter<'_, T, F>","parent":null,"children":[],"decl_id":null,"docs":" Drains elements which are true under the given predicate,\n and returns an iterator over the removed items.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":228677,"byte_end":228682,"line_start":405,"line_end":405,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashSet<T, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":229259,"byte_end":229265,"line_start":424,"line_end":424,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashSet<T, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the set's [`BuildHasher`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":229934,"byte_end":229941,"line_start":451,"line_end":451,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashSet<T, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashSet`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":230648,"byte_end":230659,"line_start":472,"line_end":472,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashSet<T, S>>::try_reserve","value":"fn (&mut self, additional: usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashSet<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":231356,"byte_end":231369,"line_start":493,"line_end":493,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashSet<T, S>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":232185,"byte_end":232194,"line_start":519,"line_end":519,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashSet<T, S>>::shrink_to","value":"fn (&mut self, min_capacity: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":233136,"byte_end":233146,"line_start":547,"line_end":547,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashSet<T, S>>::difference","value":"fn <'a> (&'a self, other: &'a Self) -> Difference<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference,\n i.e., the values that are in `self` but not in `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":234095,"byte_end":234115,"line_start":576,"line_end":576,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashSet<T, S>>::symmetric_difference","value":"fn <'a> (&'a self, other: &'a Self) -> SymmetricDifference<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference,\n i.e., the values that are in `self` or in `other` but not in both.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":234969,"byte_end":234981,"line_start":601,"line_end":601,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashSet<T, S>>::intersection","value":"fn <'a> (&'a self, other: &'a Self) -> Intersection<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection,\n i.e., the values that are both in `self` and `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":235939,"byte_end":235944,"line_start":632,"line_end":632,"column_start":12,"column_end":17},"name":"union","qualname":"<HashSet<T, S>>::union","value":"fn <'a> (&'a self, other: &'a Self) -> Union<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union,\n i.e., all the values in `self` or `other`, without duplicates.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":236924,"byte_end":236932,"line_start":662,"line_end":662,"column_start":12,"column_end":20},"name":"contains","qualname":"<HashSet<T, S>>::contains","value":"fn <Q> (&self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":237794,"byte_end":237797,"line_start":689,"line_end":689,"column_start":12,"column_end":15},"name":"get","qualname":"<HashSet<T, S>>::get","value":"fn <Q> (&self, value: &Q) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value in the set, if any, that is equal to the given value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":238626,"byte_end":238639,"line_start":716,"line_end":716,"column_start":12,"column_end":25},"name":"get_or_insert","qualname":"<HashSet<T, S>>::get_or_insert","value":"fn (&mut self, value: T) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given `value` into the set if it is not present, then\n returns a reference to the value in the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":239630,"byte_end":239649,"line_start":745,"line_end":745,"column_start":12,"column_end":31},"name":"get_or_insert_owned","qualname":"<HashSet<T, S>>::get_or_insert_owned","value":"fn <Q> (&mut self, value: &Q) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts an owned copy of the given `value` into the set if it is not\n present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":239609,"byte_end":239618,"line_start":744,"line_end":744,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":240806,"byte_end":240824,"line_start":778,"line_end":778,"column_start":12,"column_end":30},"name":"get_or_insert_with","qualname":"<HashSet<T, S>>::get_or_insert_with","value":"fn <Q, F> (&mut self, value: &Q, f: F) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value computed from `f` into the set if the given `value` is\n not present, then returns a reference to the value in the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":241830,"byte_end":241841,"line_start":810,"line_end":810,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<HashSet<T, S>>::is_disjoint","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n This is equivalent to checking for an empty intersection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":242463,"byte_end":242472,"line_start":831,"line_end":831,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<HashSet<T, S>>::is_subset","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another,\n i.e., `other` contains at least all the values in `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":243216,"byte_end":243227,"line_start":856,"line_end":856,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<HashSet<T, S>>::is_superset","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another,\n i.e., `self` contains at least all the values in `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":243808,"byte_end":243814,"line_start":878,"line_end":878,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashSet<T, S>>::insert","value":"fn (&mut self, value: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":244449,"byte_end":244456,"line_start":898,"line_end":898,"column_start":12,"column_end":19},"name":"replace","qualname":"<HashSet<T, S>>::replace","value":"fn (&mut self, value: T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is equal to the given\n one. Returns the replaced value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":245464,"byte_end":245470,"line_start":930,"line_end":930,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashSet<T, S>>::remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns whether the value was\n present in the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":246340,"byte_end":246344,"line_start":957,"line_end":957,"column_start":12,"column_end":16},"name":"take","qualname":"<HashSet<T, S>>::take","value":"fn <Q> (&mut self, value: &Q) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the given one.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":252462,"byte_end":252466,"line_start":1208,"line_end":1208,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1177}],"decl_id":null,"docs":" An iterator over the items of a `HashSet`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":252820,"byte_end":252828,"line_start":1219,"line_end":1219,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1180}],"decl_id":null,"docs":" An owning iterator over the items of a `HashSet`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":253133,"byte_end":253138,"line_start":1230,"line_end":1230,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1184}],"decl_id":null,"docs":" A draining iterator over the items of a `HashSet`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":253505,"byte_end":253516,"line_start":1241,"line_end":1241,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::set::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190}],"decl_id":null,"docs":" A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":253918,"byte_end":253930,"line_start":1256,"line_end":1256,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `HashSet`s.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":254350,"byte_end":254360,"line_start":1270,"line_end":1270,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `HashSet`s.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1203},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":254820,"byte_end":254839,"line_start":1284,"line_end":1284,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1207}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `HashSet`s.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":255192,"byte_end":255197,"line_start":1295,"line_end":1295,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1212}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `HashSet`s.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":1687,"byte_end":1695,"line_start":65,"line_end":65,"column_start":9,"column_end":17},"name":"hash_map","qualname":"::hash_map","value":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1382}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":2242,"byte_end":2250,"line_start":82,"line_end":82,"column_start":9,"column_end":17},"name":"hash_set","qualname":"::hash_set","value":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1384}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":3002,"byte_end":3018,"line_start":105,"line_end":105,"column_start":5,"column_end":21},"name":"CapacityOverflow","qualname":"::TryReserveError::CapacityOverflow","value":"TryReserveError::CapacityOverflow","parent":{"krate":0,"index":1437},"children":[],"decl_id":null,"docs":" Error due to the computed capacity exceeding the collection's maximum\n (usually `isize::MAX` bytes).\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":3072,"byte_end":3082,"line_start":108,"line_end":108,"column_start":5,"column_end":15},"name":"AllocError","qualname":"::TryReserveError::AllocError","value":"TryReserveError::AllocError { layout }","parent":{"krate":0,"index":1437},"children":[],"decl_id":null,"docs":" The memory allocator returned an error\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\lib.rs","byte_start":2864,"byte_end":2879,"line_start":102,"line_end":102,"column_start":10,"column_end":25},"name":"TryReserveError","qualname":"::TryReserveError","value":"TryReserveError::{CapacityOverflow, AllocError}","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1440}],"decl_id":null,"docs":" The error type for `try_reserve` methods.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\sse2.rs","byte_start":5560220,"byte_end":5560225,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\bitmask.rs","byte_start":78141,"byte_end":78148,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\bitmask.rs","byte_start":80762,"byte_end":80769,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\bitmask.rs","byte_start":81057,"byte_end":81068,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":7417,"byte_end":7428,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":10159,"byte_end":10167,"line_start":153,"line_end":153,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":15090,"byte_end":15096,"line_start":282,"line_end":282,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":15122,"byte_end":15128,"line_start":284,"line_end":284,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":15261,"byte_end":15267,"line_start":291,"line_end":291,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":18089,"byte_end":18097,"line_start":378,"line_end":378,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":50403,"byte_end":50411,"line_start":1182,"line_end":1182,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":50456,"byte_end":50464,"line_start":1183,"line_end":1183,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":50511,"byte_end":50519,"line_start":1185,"line_end":1185,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":52943,"byte_end":52951,"line_start":1250,"line_end":1250,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":53734,"byte_end":53742,"line_start":1274,"line_end":1274,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":57695,"byte_end":57703,"line_start":1380,"line_end":1380,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":58125,"byte_end":58133,"line_start":1396,"line_end":1396,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":58975,"byte_end":58987,"line_start":1427,"line_end":1427,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":61810,"byte_end":61822,"line_start":1496,"line_end":1496,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":61853,"byte_end":61865,"line_start":1497,"line_end":1497,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":61891,"byte_end":61903,"line_start":1499,"line_end":1499,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":62193,"byte_end":62205,"line_start":1511,"line_end":1511,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":63672,"byte_end":63684,"line_start":1549,"line_end":1549,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":64579,"byte_end":64586,"line_start":1568,"line_end":1568,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":70525,"byte_end":70532,"line_start":1686,"line_end":1686,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":70740,"byte_end":70747,"line_start":1696,"line_end":1696,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":71432,"byte_end":71439,"line_start":1719,"line_end":1719,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":71472,"byte_end":71479,"line_start":1720,"line_end":1720,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":71676,"byte_end":71687,"line_start":1729,"line_end":1729,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":71840,"byte_end":71851,"line_start":1736,"line_end":1736,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":71896,"byte_end":71907,"line_start":1737,"line_end":1737,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":72547,"byte_end":72558,"line_start":1759,"line_end":1759,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":73071,"byte_end":73082,"line_start":1778,"line_end":1778,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":73422,"byte_end":73433,"line_start":1792,"line_end":1792,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":73466,"byte_end":73477,"line_start":1793,"line_end":1793,"column_start":27,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":74017,"byte_end":74025,"line_start":1810,"line_end":1810,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":74182,"byte_end":74190,"line_start":1817,"line_end":1817,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":74239,"byte_end":74247,"line_start":1818,"line_end":1818,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":74290,"byte_end":74298,"line_start":1820,"line_end":1820,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":75026,"byte_end":75034,"line_start":1843,"line_end":1843,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":75427,"byte_end":75435,"line_start":1860,"line_end":1860,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":75472,"byte_end":75480,"line_start":1861,"line_end":1861,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":76012,"byte_end":76023,"line_start":1883,"line_end":1883,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":76594,"byte_end":76605,"line_start":1904,"line_end":1904,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":88306,"byte_end":88313,"line_start":193,"line_end":193,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":90047,"byte_end":90054,"line_start":251,"line_end":251,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":101315,"byte_end":101322,"line_start":642,"line_end":642,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":114918,"byte_end":114925,"line_start":1068,"line_end":1068,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":117858,"byte_end":117865,"line_start":1126,"line_end":1126,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":118186,"byte_end":118193,"line_start":1142,"line_end":1142,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":118287,"byte_end":118294,"line_start":1150,"line_end":1150,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":118490,"byte_end":118497,"line_start":1160,"line_end":1160,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":118787,"byte_end":118794,"line_start":1171,"line_end":1171,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":119640,"byte_end":119644,"line_start":1203,"line_end":1203,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":119882,"byte_end":119886,"line_start":1213,"line_end":1213,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":120664,"byte_end":120671,"line_start":1235,"line_end":1235,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":120697,"byte_end":120704,"line_start":1237,"line_end":1237,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":121368,"byte_end":121376,"line_start":1259,"line_end":1259,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":122031,"byte_end":122035,"line_start":1282,"line_end":1282,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":122233,"byte_end":122237,"line_start":1291,"line_end":1291,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":122761,"byte_end":122767,"line_start":1309,"line_end":1309,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":122967,"byte_end":122973,"line_start":1318,"line_end":1318,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":123443,"byte_end":123448,"line_start":1335,"line_end":1335,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":124199,"byte_end":124210,"line_start":1361,"line_end":1361,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":124604,"byte_end":124620,"line_start":1377,"line_end":1377,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":124770,"byte_end":124781,"line_start":1384,"line_end":1384,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":125152,"byte_end":125163,"line_start":1401,"line_end":1401,"column_start":33,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":125410,"byte_end":125426,"line_start":1409,"line_end":1409,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":127524,"byte_end":127543,"line_start":1475,"line_end":1475,"column_start":31,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":127636,"byte_end":127655,"line_start":1482,"line_end":1482,"column_start":31,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":128278,"byte_end":128296,"line_start":1508,"line_end":1508,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":129121,"byte_end":129139,"line_start":1535,"line_end":1535,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":130149,"byte_end":130164,"line_start":1565,"line_end":1565,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":131618,"byte_end":131629,"line_start":1613,"line_end":1613,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":137474,"byte_end":137493,"line_start":1807,"line_end":1807,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":141515,"byte_end":141532,"line_start":1925,"line_end":1925,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":143558,"byte_end":143576,"line_start":1991,"line_end":1991,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":143753,"byte_end":143764,"line_start":1997,"line_end":1997,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":144098,"byte_end":144117,"line_start":2006,"line_end":2006,"column_start":39,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":144375,"byte_end":144392,"line_start":2015,"line_end":2015,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":144557,"byte_end":144572,"line_start":2021,"line_end":2021,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":145161,"byte_end":145166,"line_start":2041,"line_end":2041,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":145738,"byte_end":145751,"line_start":2061,"line_end":2061,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":145844,"byte_end":145857,"line_start":2068,"line_end":2068,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":145959,"byte_end":145972,"line_start":2076,"line_end":2076,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":146456,"byte_end":146467,"line_start":2095,"line_end":2095,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":147164,"byte_end":147171,"line_start":2121,"line_end":2121,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":147950,"byte_end":147954,"line_start":2150,"line_end":2150,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":148525,"byte_end":148529,"line_start":2169,"line_end":2169,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":148683,"byte_end":148687,"line_start":2176,"line_end":2176,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":148730,"byte_end":148737,"line_start":2178,"line_end":2178,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":149320,"byte_end":149327,"line_start":2197,"line_end":2197,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":149480,"byte_end":149487,"line_start":2203,"line_end":2203,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":149528,"byte_end":149535,"line_start":2205,"line_end":2205,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":149741,"byte_end":149749,"line_start":2215,"line_end":2215,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":150080,"byte_end":150088,"line_start":2227,"line_end":2227,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":150237,"byte_end":150245,"line_start":2233,"line_end":2233,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":150296,"byte_end":150304,"line_start":2235,"line_end":2235,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":150466,"byte_end":150470,"line_start":2241,"line_end":2241,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":150942,"byte_end":150946,"line_start":2257,"line_end":2257,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":151099,"byte_end":151103,"line_start":2263,"line_end":2263,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":151146,"byte_end":151152,"line_start":2265,"line_end":2265,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":151624,"byte_end":151630,"line_start":2281,"line_end":2281,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":151783,"byte_end":151789,"line_start":2287,"line_end":2287,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":151832,"byte_end":151841,"line_start":2289,"line_end":2289,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":152321,"byte_end":152330,"line_start":2305,"line_end":2305,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":152483,"byte_end":152492,"line_start":2311,"line_end":2311,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":152533,"byte_end":152542,"line_start":2313,"line_end":2313,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":152758,"byte_end":152763,"line_start":2323,"line_end":2323,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":153098,"byte_end":153103,"line_start":2335,"line_end":2335,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":153256,"byte_end":153261,"line_start":2341,"line_end":2341,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":153302,"byte_end":153307,"line_start":2343,"line_end":2343,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":153507,"byte_end":153512,"line_start":2353,"line_end":2353,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":160131,"byte_end":160136,"line_start":2584,"line_end":2584,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":160893,"byte_end":160906,"line_start":2611,"line_end":2611,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":170176,"byte_end":170187,"line_start":2917,"line_end":2917,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":172482,"byte_end":172489,"line_start":3002,"line_end":3002,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":173062,"byte_end":173069,"line_start":3020,"line_end":3020,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":174516,"byte_end":174523,"line_start":3065,"line_end":3065,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\scopeguard.rs","byte_start":215808,"byte_end":215818,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\scopeguard.rs","byte_start":216006,"byte_end":216016,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\scopeguard.rs","byte_start":216195,"byte_end":216205,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":220430,"byte_end":220437,"line_start":118,"line_end":118,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":221775,"byte_end":221782,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":229327,"byte_end":229334,"line_start":429,"line_end":429,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":246661,"byte_end":246668,"line_start":970,"line_end":970,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":246916,"byte_end":246923,"line_start":984,"line_end":984,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":247005,"byte_end":247012,"line_start":991,"line_end":991,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":247233,"byte_end":247240,"line_start":1001,"line_end":1001,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":247548,"byte_end":247555,"line_start":1014,"line_end":1014,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":248121,"byte_end":248128,"line_start":1037,"line_end":1037,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":248693,"byte_end":248700,"line_start":1060,"line_end":1060,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":255520,"byte_end":255527,"line_start":1309,"line_end":1309,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":256402,"byte_end":256406,"line_start":1341,"line_end":1341,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":256590,"byte_end":256594,"line_start":1349,"line_end":1349,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":256923,"byte_end":256927,"line_start":1361,"line_end":1361,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":257073,"byte_end":257077,"line_start":1367,"line_end":1367,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":257124,"byte_end":257128,"line_start":1369,"line_end":1369,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":257285,"byte_end":257293,"line_start":1375,"line_end":1375,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":257745,"byte_end":257753,"line_start":1391,"line_end":1391,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":257895,"byte_end":257903,"line_start":1397,"line_end":1397,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":257946,"byte_end":257954,"line_start":1399,"line_end":1399,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":258168,"byte_end":258173,"line_start":1406,"line_end":1406,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":258629,"byte_end":258634,"line_start":1422,"line_end":1422,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":258780,"byte_end":258785,"line_start":1428,"line_end":1428,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":258832,"byte_end":258837,"line_start":1430,"line_end":1430,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":259058,"byte_end":259069,"line_start":1437,"line_end":1437,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":259380,"byte_end":259391,"line_start":1451,"line_end":1451,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":259808,"byte_end":259819,"line_start":1470,"line_end":1470,"column_start":30,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":259882,"byte_end":259894,"line_start":1472,"line_end":1472,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":260113,"byte_end":260125,"line_start":1482,"line_end":1482,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":260663,"byte_end":260675,"line_start":1506,"line_end":1506,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":260900,"byte_end":260912,"line_start":1516,"line_end":1516,"column_start":30,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":260993,"byte_end":261003,"line_start":1523,"line_end":1523,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":261220,"byte_end":261230,"line_start":1533,"line_end":1533,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":261772,"byte_end":261782,"line_start":1557,"line_end":1557,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":261868,"byte_end":261878,"line_start":1564,"line_end":1564,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":262095,"byte_end":262114,"line_start":1574,"line_end":1574,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":262320,"byte_end":262339,"line_start":1583,"line_end":1583,"column_start":29,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":262711,"byte_end":262730,"line_start":1600,"line_end":1600,"column_start":30,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":262816,"byte_end":262835,"line_start":1607,"line_end":1607,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":263052,"byte_end":263057,"line_start":1617,"line_end":1617,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":263250,"byte_end":263255,"line_start":1626,"line_end":1626,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":263341,"byte_end":263346,"line_start":1633,"line_end":1633,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":263570,"byte_end":263575,"line_start":1643,"line_end":1643,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\sse2.rs","byte_start":5560220,"byte_end":5560225,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\bitmask.rs","byte_start":78141,"byte_end":78148,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\bitmask.rs","byte_start":80762,"byte_end":80769,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1421},"to":{"krate":1,"index":3951}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\bitmask.rs","byte_start":81057,"byte_end":81068,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":7417,"byte_end":7428,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":10159,"byte_end":10167,"line_start":153,"line_end":153,"column_start":19,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":15090,"byte_end":15096,"line_start":282,"line_end":282,"column_start":25,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":76},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":15122,"byte_end":15128,"line_start":284,"line_end":284,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":76},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":15261,"byte_end":15267,"line_start":291,"line_end":291,"column_start":9,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":76},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":18089,"byte_end":18097,"line_start":378,"line_end":378,"column_start":9,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":50403,"byte_end":50411,"line_start":1182,"line_end":1182,"column_start":25,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":98},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":50456,"byte_end":50464,"line_start":1183,"line_end":1183,"column_start":25,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":98},"to":{"krate":1,"index":1545}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":50511,"byte_end":50519,"line_start":1185,"line_end":1185,"column_start":26,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":98},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":52943,"byte_end":52951,"line_start":1250,"line_end":1250,"column_start":34,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":98},"to":{"krate":0,"index":179}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":53734,"byte_end":53742,"line_start":1274,"line_end":1274,"column_start":16,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":57695,"byte_end":57703,"line_start":1380,"line_end":1380,"column_start":18,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":98},"to":{"krate":1,"index":1726}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":58125,"byte_end":58133,"line_start":1396,"line_end":1396,"column_start":26,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":98},"to":{"krate":1,"index":3951}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":58975,"byte_end":58987,"line_start":1427,"line_end":1427,"column_start":9,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":61810,"byte_end":61822,"line_start":1496,"line_end":1496,"column_start":25,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":61853,"byte_end":61865,"line_start":1497,"line_end":1497,"column_start":25,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":1545}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":61891,"byte_end":61903,"line_start":1499,"line_end":1499,"column_start":19,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":62193,"byte_end":62205,"line_start":1511,"line_end":1511,"column_start":22,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":63672,"byte_end":63684,"line_start":1549,"line_end":1549,"column_start":27,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":64579,"byte_end":64586,"line_start":1568,"line_end":1568,"column_start":9,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":70525,"byte_end":70532,"line_start":1686,"line_end":1686,"column_start":19,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":223},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":70740,"byte_end":70747,"line_start":1696,"line_end":1696,"column_start":22,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":223},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":71432,"byte_end":71439,"line_start":1719,"line_end":1719,"column_start":31,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":223},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":71472,"byte_end":71479,"line_start":1720,"line_end":1720,"column_start":27,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":223},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":71676,"byte_end":71687,"line_start":1729,"line_end":1729,"column_start":9,"column_end":20},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":71840,"byte_end":71851,"line_start":1736,"line_end":1736,"column_start":25,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":71896,"byte_end":71907,"line_start":1737,"line_end":1737,"column_start":25,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":1545}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":72547,"byte_end":72558,"line_start":1759,"line_end":1759,"column_start":18,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":1726}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":73071,"byte_end":73082,"line_start":1778,"line_end":1778,"column_start":22,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":73422,"byte_end":73433,"line_start":1792,"line_end":1792,"column_start":31,"column_end":42},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":73466,"byte_end":73477,"line_start":1793,"line_end":1793,"column_start":27,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":74017,"byte_end":74025,"line_start":1810,"line_end":1810,"column_start":9,"column_end":17},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":74182,"byte_end":74190,"line_start":1817,"line_end":1817,"column_start":25,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":268},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":74239,"byte_end":74247,"line_start":1818,"line_end":1818,"column_start":25,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":268},"to":{"krate":1,"index":1545}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":74290,"byte_end":74298,"line_start":1820,"line_end":1820,"column_start":18,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":268},"to":{"krate":1,"index":1726}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":75026,"byte_end":75034,"line_start":1843,"line_end":1843,"column_start":22,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":268},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":75427,"byte_end":75435,"line_start":1860,"line_end":1860,"column_start":31,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":268},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":75472,"byte_end":75480,"line_start":1861,"line_end":1861,"column_start":27,"column_end":35},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":268},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":76012,"byte_end":76023,"line_start":1883,"line_end":1883,"column_start":13,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\raw\\mod.rs","byte_start":76594,"byte_end":76605,"line_start":1904,"line_end":1904,"column_start":26,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":294},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":88306,"byte_end":88313,"line_start":193,"line_end":193,"column_start":46,"column_end":53},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":337},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":90047,"byte_end":90054,"line_start":251,"line_end":251,"column_start":15,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":101315,"byte_end":101322,"line_start":642,"line_end":642,"column_start":15,"column_end":22},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":114918,"byte_end":114925,"line_start":1068,"line_end":1068,"column_start":15,"column_end":22},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":117858,"byte_end":117865,"line_start":1126,"line_end":1126,"column_start":29,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":337},"to":{"krate":1,"index":2040}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":118186,"byte_end":118193,"line_start":1142,"line_end":1142,"column_start":22,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":337},"to":{"krate":1,"index":2045}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":118287,"byte_end":118294,"line_start":1150,"line_end":1150,"column_start":25,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":337},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":118490,"byte_end":118497,"line_start":1160,"line_end":1160,"column_start":27,"column_end":34},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":337},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":118787,"byte_end":118794,"line_start":1171,"line_end":1171,"column_start":40,"column_end":47},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":337},"to":{"krate":1,"index":1780}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":119640,"byte_end":119644,"line_start":1203,"line_end":1203,"column_start":22,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":445},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":119882,"byte_end":119886,"line_start":1213,"line_end":1213,"column_start":41,"column_end":45},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":445},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":120664,"byte_end":120671,"line_start":1235,"line_end":1235,"column_start":40,"column_end":47},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":459},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":120697,"byte_end":120704,"line_start":1237,"line_end":1237,"column_start":12,"column_end":19},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":121368,"byte_end":121376,"line_start":1259,"line_end":1259,"column_start":12,"column_end":20},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":122031,"byte_end":122035,"line_start":1282,"line_end":1282,"column_start":22,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":480},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":122233,"byte_end":122237,"line_start":1291,"line_end":1291,"column_start":34,"column_end":38},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":480},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":122761,"byte_end":122767,"line_start":1309,"line_end":1309,"column_start":22,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":493},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":122967,"byte_end":122973,"line_start":1318,"line_end":1318,"column_start":34,"column_end":40},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":493},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":123443,"byte_end":123448,"line_start":1335,"line_end":1335,"column_start":12,"column_end":17},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":124199,"byte_end":124210,"line_start":1361,"line_end":1361,"column_start":28,"column_end":39},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":515},"to":{"krate":1,"index":1726}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":124604,"byte_end":124620,"line_start":1377,"line_end":1377,"column_start":28,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":528},"to":{"krate":1,"index":1726}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":124770,"byte_end":124781,"line_start":1384,"line_end":1384,"column_start":28,"column_end":39},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":515},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":125152,"byte_end":125163,"line_start":1401,"line_end":1401,"column_start":33,"column_end":44},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":515},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":125410,"byte_end":125426,"line_start":1409,"line_end":1409,"column_start":12,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":127524,"byte_end":127543,"line_start":1475,"line_end":1475,"column_start":31,"column_end":50},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":580},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":127636,"byte_end":127655,"line_start":1482,"line_end":1482,"column_start":31,"column_end":50},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":580},"to":{"krate":1,"index":1545}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":128278,"byte_end":128296,"line_start":1508,"line_end":1508,"column_start":19,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":129121,"byte_end":129139,"line_start":1535,"line_end":1535,"column_start":19,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":130149,"byte_end":130164,"line_start":1565,"line_end":1565,"column_start":19,"column_end":34},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":131618,"byte_end":131629,"line_start":1613,"line_end":1613,"column_start":19,"column_end":30},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":137474,"byte_end":137493,"line_start":1807,"line_end":1807,"column_start":19,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":141515,"byte_end":141532,"line_start":1925,"line_end":1925,"column_start":19,"column_end":36},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":143558,"byte_end":143576,"line_start":1991,"line_end":1991,"column_start":25,"column_end":43},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":143753,"byte_end":143764,"line_start":1997,"line_end":1997,"column_start":39,"column_end":50},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":569},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":144098,"byte_end":144117,"line_start":2006,"line_end":2006,"column_start":39,"column_end":58},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":580},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":144375,"byte_end":144392,"line_start":2015,"line_end":2015,"column_start":25,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":144557,"byte_end":144572,"line_start":2021,"line_end":2021,"column_start":25,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":603},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":145161,"byte_end":145166,"line_start":2041,"line_end":2041,"column_start":39,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":719},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":145738,"byte_end":145751,"line_start":2061,"line_end":2061,"column_start":31,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":735},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":145844,"byte_end":145857,"line_start":2068,"line_end":2068,"column_start":31,"column_end":44},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":735},"to":{"krate":1,"index":1545}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":145959,"byte_end":145972,"line_start":2076,"line_end":2076,"column_start":39,"column_end":52},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":735},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":146456,"byte_end":146467,"line_start":2095,"line_end":2095,"column_start":32,"column_end":43},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":757},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":147164,"byte_end":147171,"line_start":2121,"line_end":2121,"column_start":32,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":337},"to":{"krate":1,"index":3951}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":147950,"byte_end":147954,"line_start":2150,"line_end":2150,"column_start":29,"column_end":33},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":445},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":148525,"byte_end":148529,"line_start":2169,"line_end":2169,"column_start":34,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":445},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":148683,"byte_end":148687,"line_start":2176,"line_end":2176,"column_start":30,"column_end":34},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":445},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":148730,"byte_end":148737,"line_start":2178,"line_end":2178,"column_start":29,"column_end":36},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":459},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":149320,"byte_end":149327,"line_start":2197,"line_end":2197,"column_start":34,"column_end":41},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":459},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":149480,"byte_end":149487,"line_start":2203,"line_end":2203,"column_start":30,"column_end":37},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":459},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":149528,"byte_end":149535,"line_start":2205,"line_end":2205,"column_start":27,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":459},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":149741,"byte_end":149749,"line_start":2215,"line_end":2215,"column_start":25,"column_end":33},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":472},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":150080,"byte_end":150088,"line_start":2227,"line_end":2227,"column_start":34,"column_end":42},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":472},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":150237,"byte_end":150245,"line_start":2233,"line_end":2233,"column_start":30,"column_end":38},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":472},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":150296,"byte_end":150304,"line_start":2235,"line_end":2235,"column_start":41,"column_end":49},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":472},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":150466,"byte_end":150470,"line_start":2241,"line_end":2241,"column_start":29,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":480},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":150942,"byte_end":150946,"line_start":2257,"line_end":2257,"column_start":34,"column_end":38},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":480},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":151099,"byte_end":151103,"line_start":2263,"line_end":2263,"column_start":30,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":480},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":151146,"byte_end":151152,"line_start":2265,"line_end":2265,"column_start":29,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":493},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":151624,"byte_end":151630,"line_start":2281,"line_end":2281,"column_start":34,"column_end":40},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":493},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":151783,"byte_end":151789,"line_start":2287,"line_end":2287,"column_start":30,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":493},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":151832,"byte_end":151841,"line_start":2289,"line_end":2289,"column_start":29,"column_end":38},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":558},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":152321,"byte_end":152330,"line_start":2305,"line_end":2305,"column_start":34,"column_end":43},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":558},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":152483,"byte_end":152492,"line_start":2311,"line_end":2311,"column_start":30,"column_end":39},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":558},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":152533,"byte_end":152542,"line_start":2313,"line_end":2313,"column_start":27,"column_end":36},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":558},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":152758,"byte_end":152763,"line_start":2323,"line_end":2323,"column_start":29,"column_end":34},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":506},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":153098,"byte_end":153103,"line_start":2335,"line_end":2335,"column_start":34,"column_end":39},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":506},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":153256,"byte_end":153261,"line_start":2341,"line_end":2341,"column_start":30,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":506},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":153302,"byte_end":153307,"line_start":2343,"line_end":2343,"column_start":27,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":506},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":153507,"byte_end":153512,"line_start":2353,"line_end":2353,"column_start":19,"column_end":24},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":160131,"byte_end":160136,"line_start":2584,"line_end":2584,"column_start":28,"column_end":33},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":160893,"byte_end":160906,"line_start":2611,"line_end":2611,"column_start":19,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":170176,"byte_end":170187,"line_start":2917,"line_end":2917,"column_start":19,"column_end":30},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":172482,"byte_end":172489,"line_start":3002,"line_end":3002,"column_start":40,"column_end":47},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":337},"to":{"krate":1,"index":3947}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":173062,"byte_end":173069,"line_start":3020,"line_end":3020,"column_start":34,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":337},"to":{"krate":1,"index":3960}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\map.rs","byte_start":174516,"byte_end":174523,"line_start":3065,"line_end":3065,"column_start":46,"column_end":53},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":337},"to":{"krate":1,"index":3960}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\scopeguard.rs","byte_start":215808,"byte_end":215818,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1011},"to":{"krate":1,"index":1704}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\scopeguard.rs","byte_start":216006,"byte_end":216016,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1011},"to":{"krate":1,"index":1715}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\scopeguard.rs","byte_start":216195,"byte_end":216205,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1011},"to":{"krate":1,"index":1726}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":220430,"byte_end":220437,"line_start":118,"line_end":118,"column_start":36,"column_end":43},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1057},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":221775,"byte_end":221782,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":229327,"byte_end":229334,"line_start":429,"line_end":429,"column_start":12,"column_end":19},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":246661,"byte_end":246668,"line_start":970,"line_end":970,"column_start":26,"column_end":33},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1057},"to":{"krate":1,"index":2040}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":246916,"byte_end":246923,"line_start":984,"line_end":984,"column_start":19,"column_end":26},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1057},"to":{"krate":1,"index":2045}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":247005,"byte_end":247012,"line_start":991,"line_end":991,"column_start":27,"column_end":34},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1057},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":247233,"byte_end":247240,"line_start":1001,"line_end":1001,"column_start":32,"column_end":39},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1057},"to":{"krate":1,"index":3947}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":247548,"byte_end":247555,"line_start":1014,"line_end":1014,"column_start":26,"column_end":33},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1057},"to":{"krate":1,"index":3960}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":248121,"byte_end":248128,"line_start":1037,"line_end":1037,"column_start":34,"column_end":41},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1057},"to":{"krate":1,"index":3960}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":248693,"byte_end":248700,"line_start":1060,"line_end":1060,"column_start":24,"column_end":31},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1057},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":255520,"byte_end":255527,"line_start":1309,"line_end":1309,"column_start":29,"column_end":36},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1057},"to":{"krate":1,"index":3951}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":256402,"byte_end":256406,"line_start":1341,"line_end":1341,"column_start":19,"column_end":23},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1174},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":256590,"byte_end":256594,"line_start":1349,"line_end":1349,"column_start":26,"column_end":30},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1174},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":256923,"byte_end":256927,"line_start":1361,"line_end":1361,"column_start":35,"column_end":39},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1174},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":257073,"byte_end":257077,"line_start":1367,"line_end":1367,"column_start":27,"column_end":31},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1174},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":257124,"byte_end":257128,"line_start":1369,"line_end":1369,"column_start":36,"column_end":40},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1174},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":257285,"byte_end":257293,"line_start":1375,"line_end":1375,"column_start":22,"column_end":30},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1178},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":257745,"byte_end":257753,"line_start":1391,"line_end":1391,"column_start":31,"column_end":39},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1178},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":257895,"byte_end":257903,"line_start":1397,"line_end":1397,"column_start":27,"column_end":35},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1178},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":257946,"byte_end":257954,"line_start":1399,"line_end":1399,"column_start":36,"column_end":44},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1178},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":258168,"byte_end":258173,"line_start":1406,"line_end":1406,"column_start":22,"column_end":27},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1181},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":258629,"byte_end":258634,"line_start":1422,"line_end":1422,"column_start":31,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1181},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":258780,"byte_end":258785,"line_start":1428,"line_end":1428,"column_start":27,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1181},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":258832,"byte_end":258837,"line_start":1430,"line_end":1430,"column_start":36,"column_end":41},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1181},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":259058,"byte_end":259069,"line_start":1437,"line_end":1437,"column_start":25,"column_end":36},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1185},"to":{"krate":1,"index":1726}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":259380,"byte_end":259391,"line_start":1451,"line_end":1451,"column_start":25,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1185},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":259808,"byte_end":259819,"line_start":1470,"line_end":1470,"column_start":30,"column_end":41},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1185},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":259882,"byte_end":259894,"line_start":1472,"line_end":1472,"column_start":22,"column_end":34},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":260113,"byte_end":260125,"line_start":1482,"line_end":1482,"column_start":29,"column_end":41},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":260663,"byte_end":260675,"line_start":1506,"line_end":1506,"column_start":27,"column_end":39},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":260900,"byte_end":260912,"line_start":1516,"line_end":1516,"column_start":30,"column_end":42},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":260993,"byte_end":261003,"line_start":1523,"line_end":1523,"column_start":22,"column_end":32},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1197},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":261220,"byte_end":261230,"line_start":1533,"line_end":1533,"column_start":29,"column_end":39},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1197},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":261772,"byte_end":261782,"line_start":1557,"line_end":1557,"column_start":30,"column_end":40},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1197},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":261868,"byte_end":261878,"line_start":1564,"line_end":1564,"column_start":27,"column_end":37},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1197},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":262095,"byte_end":262114,"line_start":1574,"line_end":1574,"column_start":22,"column_end":41},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1203},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":262320,"byte_end":262339,"line_start":1583,"line_end":1583,"column_start":29,"column_end":48},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1203},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":262711,"byte_end":262730,"line_start":1600,"line_end":1600,"column_start":30,"column_end":49},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1203},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":262816,"byte_end":262835,"line_start":1607,"line_end":1607,"column_start":27,"column_end":46},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1203},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":263052,"byte_end":263057,"line_start":1617,"line_end":1617,"column_start":22,"column_end":27},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1208},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":263250,"byte_end":263255,"line_start":1626,"line_end":1626,"column_start":30,"column_end":35},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1208},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":263341,"byte_end":263346,"line_start":1633,"line_end":1633,"column_start":27,"column_end":32},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1208},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\Etienne Couzon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.9.1\\src\\set.rs","byte_start":263570,"byte_end":263575,"line_start":1643,"line_end":1643,"column_start":29,"column_end":34},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1208},"to":{"krate":1,"index":3653}}]}